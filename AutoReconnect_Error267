-- Auto reconnect and teleport to least populated server on error 267
local TeleportService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local CoreGui = game:GetService("CoreGui")

-- Function to get the least populated public server (not empty or current one)
local function getLeastPopulatedServer()
    local placeId = game.PlaceId
    local cursor = ""
    local leastPopulatedServer = nil
    local minPlayers = math.huge

    while true do
        local url = "https://games.roblox.com/v1/games/" .. placeId .. "/servers/Public?sortOrder=Asc&limit=100"
        if cursor ~= "" then
            url = url .. "&cursor=" .. cursor
        end

        local success, response = pcall(function()
            return HttpService:JSONDecode(game:HttpGet(url))
        end)

        if success and response and response.data then
            for _, server in ipairs(response.data) do
                local playerCount = server.playing
                if playerCount > 0 and playerCount < minPlayers and server.id ~= game.JobId then
                    minPlayers = playerCount
                    leastPopulatedServer = server
                end
            end
            cursor = response.nextPageCursor
            if not cursor then break end
        else
            break
        end
    end

    if leastPopulatedServer then
        return leastPopulatedServer.id
    else
        return nil
    end
end

-- Function to detect kick message and reconnect
local function checkForError()
    local robloxGui = CoreGui:WaitForChild("RobloxPromptGui", 1)
    if robloxGui then
        robloxGui.DescendantAdded:Connect(function(descendant)
            if descendant:IsA("TextLabel") and descendant.Text then
                local msg = string.lower(descendant.Text)
                if msg:find("you were kicked") or msg:find("error code: 267") then
                    warn("Detected kick (Error 267). Finding a new server...")
                    wait(.4)
                    local serverId = getLeastPopulatedServer()
                    if serverId then
                        warn("Teleporting to a less populated server...")
                        TeleportService:TeleportToPlaceInstance(game.PlaceId, serverId, LocalPlayer)
                    else
                        warn("No other server found. Rejoining the current place...")
                        TeleportService:Teleport(game.PlaceId, LocalPlayer)
                    end
                end
            end
        end)
    end
end

checkForError()
